
# Given data to transform
data = """
4, 13, 280
12, 13, 280
13, 13, 279
17, 15, 280
18, 13, 275
19, 14, 271
20, 16, 279
21, 17, 277
22, 20, 280
23, 19, 272
24, 18, 274
25, 18, 267
27, 22, 274
28, 20, 272
29, 21, 269
30, 20, 270
31, 20, 273
32, 20, 272
33, 22, 264
34, 19, 259
35, 20, 261
36, 19, 259
37, 23, 270
39, 20, 266
40, 19, 262
41, 23, 269
42, 22, 263
43, 25, 261
44, 21, 257
45, 19, 258
46, 22, 261
47, 18, 256
48, 19, 258
49, 21, 262
50, 18, 253
51, 15, 248
52, 16, 253
53, 13, 241
54, 19, 253
56, 14, 241
57, 16, 244
58, 11, 239
59, 18, 248
60, 13, 246
61, 14, 242
62, 15, 244
63, 13, 243
64, 17, 251
65, 12, 250
66, 10, 242
67, 14, 245
68, 13, 243
69, 10, 236
70, 11, 244
71, 11, 222
72, 15, 249
73, 13, 239
74, 9, 222
75, 14, 229
76, 10, 222
77, 12, 239
78, 14, 237
79, 10, 220
80, 11, 235
81, 10, 238
82, 10, 234
83, 10, 218
84, 10, 221
86, 8, 216
87, 9, 217
88, 8, 216
89, 9, 217
91, 8, 216
92, 9, 217
93, 8, 215
95, 11, 223
97, 7, 214
98, 7, 215
99, 10, 218
101, 7, 215
102, 9, 217
103, 10, 218
104, 9, 217
105, 8, 216
106, 7, 214
107, 7, 213
108, 8, 215
109, 8, 216
111, 7, 215
113, 8, 214
114, 5, 211
115, 6, 216
116, 9, 219
117, 7, 212
119, 7, 213
120, 8, 214
121, 5, 211
122, 6, 212
123, 8, 213
126, 6, 214
127, 7, 215
128, 8, 216
129, 10, 212
130, 10, 205
131, 14, 208
134, 20, 209
136, 26, 211
137, 26, 195
138, 27, 184
139, 35, 167
140, 35, 186
141, 21, 162
142, 28, 171
143, 37, 177
144, 23, 172
145, 35, 169
146, 33, 165
147, 34, 124
148, 31, 170
149, 37, 169
150, 35, 171
151, 43, 200
152, 32, 143
153, 34, 116
154, 34, 87
155, 28, 86
156, 29, 50
157, 34, 105
158, 27, 66
159, 24, 43
160, 24, 70
161, 24, 71
162, 23, 62
163, 21, 34
164, 15, 21
165, 26, 45
166, 18, 34
167, 19, 30
168, 18, 28
169, 14, 48
170, 14, 22
171, 10, 38
172, 11, 17
173, 10, 12
174, 11, 14
175, 11, 22
176, 6, 11
177, 6, 8
178, 5, 7
179, 2, 2
180, 2, 4
181, 6, 10
182, 5, 6
183, 9, 13
184, 4, 5
185, 8, 9
186, 3, 4
188, 1, 1
190, 2, 3
191, 1, 8
194, 1, 1
195, 1, 3
196, 1, 1
197, 2, 5
198, 1, 1
200, 2, 5
201, 4, 7
202, 2, 5
210, 1, 1
219, 2, 2
243, 1, 1
246, 2, 2
247, 1, 1
251, 2, 2
253, 1, 1
254, 2, 2
255, 1, 1
256, 2, 2
343, 1, 1
344, 0, 0
"""
# Assume 'data' is a multiline string variable already defined and contains your data
lines = data.strip().split('\n')
patterns, counts, files = [], [], []

for line in lines:
    parts = line.split(', ')
    patterns.append(parts[0])
    counts.append(parts[1])
    files.append(int(parts[2]))  # Ensure files are integers for percentage calculation

# Define the conversion factor for 1% as given
one_percent_equals = 2.8

# Calculate percentages based on the provided conversion factor
percentages = [round((file / one_percent_equals), 2) for file in files]

# Print the output as specified, including the new Percentage line
print("Pattern:", ", ".join(patterns))
print("Count:", ", ".join(counts))
print("Files:", ", ".join(map(str, files)))
print("Percentage:", ", ".join(map(str, percentages)))

